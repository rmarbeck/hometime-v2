# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /																	controllers.HomeController.index(request: Request)
GET     /revision-reparation-de-montres										controllers.HomeController.indexAlternate(request: Request)

GET     /entretien-reparation												controllers.HomeController.content(request: Request, key = "content.service.repairing")
GET     /service															controllers.Default.redirect(to = "/entretien-reparation")

GET     /les-services/l-offre												controllers.HomeController.offers(request: Request)
GET     /offer																controllers.Default.redirect(to = "/les-services/l-offre")

GET     /nos-horlogers														controllers.HomeController.content(request: Request, key = "content.watchmakers")
GET     /watchmakers														controllers.Default.redirect(to = "/nos-horlogers")

GET		/actualites/news													controllers.HomeController.news(request: Request)

GET     /reparation/montre/rolex											controllers.HomeController.content(request: Request, key = "content.rolex.repairing")
GET     /reparation/montre/omega											controllers.HomeController.content(request: Request, key = "content.omega.repairing")
GET     /reparation/montre/paris											controllers.HomeController.content(request: Request, key = "content.paris.repairing")


GET     /authentification/certification/montre/paris    					controllers.HomeController.content(request: Request, key = "content.authenticating")
GET     /expertise/montre/paris    											controllers.Default.redirect(to = "/authentification/certification/montre/paris")

GET		/les-services/les-prix												controllers.HomeController.prices(request: Request)
GET     /prices																controllers.Default.redirect(to = "/les-services/les-prix")

GET     /estimation/prix/devis/reparation/revision/montre					controllers.HomeController.quotationOptions(request: Request)

GET     /demande-de-devis													controllers.FormProcessingController.prepareQuotationRequest(request: Request)
GET     /order                      										controllers.Default.redirect(to = "/demande-de-devis")
POST    /demande-de-devis													controllers.FormProcessingController.processQuotationRequest(request: Request)
GET     /demande-de-devis/montre/reparation/revision/:brand    				controllers.FormProcessingController.prepareQuotationRequestWithBrand(request: Request, brand)
GET     /demande-de-devis/urgence/etancheite								controllers.FormProcessingController.prepareQuotationRequestWater(request: Request)
GET     /demande-de-devis/urgence/etancheite/montre/:brand    				controllers.FormProcessingController.prepareQuotationRequestWaterWithBrand(request: Request, brand)

GET     /devis-interactif-immediat	           								controllers.FormProcessingController.prepareAutoQuotation(request: Request)
GET     /devis-interactif-immediat/montre/entretien/revision/:brand    		controllers.FormProcessingController.prepareAutoQuotationWithBrand(request: Request, brand)
POST    /devis-interactif-immediat							         		controllers.FormProcessingController.processAutoQuotation(request: Request)

GET 	/accepter-le-devis													controllers.FormProcessingController.prepareAcceptQuotationRequest(request: Request, orderId: Long, price: String, delay: String)
POST	/accepter-le-devis													controllers.FormProcessingController.processAcceptQuotationRequest(request: Request)

GET     /changement-de-pile/etancheite         								controllers.FormProcessingController.prepareQuartzPrice(request: Request)
GET     /changement-de-pile/etancheite/montre/:brand    					controllers.FormProcessingController.prepareQuartzPriceWithBrand(request: Request, brand)
GET     /changement-de-pile         										controllers.Default.redirect(to = "/changement-de-pile/etancheite")

GET     /watch-battery-change/water-resistance         						controllers.FormProcessingController.prepareQuartzPrice_en(request: Request)
GET     /watch-battery-change/water-resistance/watch/:brand    				controllers.FormProcessingController.prepareQuartzPriceWithBrand_en(request: Request, brand)

GET     /rechercher-une-montre												controllers.FormProcessingController.prepareBuyRequest(request: Request)
POST    /rechercher-une-montre												controllers.FormProcessingController.processBuyRequest(request: Request)

GET     /nous-contacter														controllers.FormProcessingController.prepareContactRequest(request: Request)
GET     /hardCodedToContact        											controllers.Default.redirect(to = "/nous-contacter")
POST    /nous-contacter														controllers.FormProcessingController.processContactRequest(request: Request)


GET     /venir-nous-voir													controllers.HomeController.visit(request: Request)
GET     /how-to-come-to-visit-hometime    									controllers.HomeController.visit_en(request: Request)
GET     /hardCodedToAppointment     										controllers.Default.redirect(to = "/venir-nous-voir")

GET     /prendre-rendez-vous												controllers.FormProcessingController.prepareAppointment(request: Request)
POST    /prendre-rendez-vous												controllers.FormProcessingController.processAppointment(request: Request)
GET     /rendez-vous-confirme												controllers.FormProcessingController.confirmedAppointment(request: Request)

GET     /demande-de-rappel													controllers.FormProcessingController.prepareCallBackRequest(request: Request)
GET     /call-back			        										controllers.FormProcessingController.prepareCallBackRequest_en(request: Request)
POST    /demande-de-rappel													controllers.FormProcessingController.processCallBackRequest(request: Request)

GET     /quand-faire-la-revision											controllers.FormProcessingController.prepareServiceTestRequest(request: Request)
POST    /quand-faire-la-revision											controllers.FormProcessingController.processServiceTestRequest(request: Request)
GET		/checkResults/:type/:bool											controllers.FormProcessingController.testServiceTestResult(request: Request, type, bool)

GET     /qui-sommes-nous													controllers.HomeController.content(request: Request, key = "content.who.are.we")
GET     /a-propos                   										controllers.Default.redirect(to = "/qui-sommes-nous")
GET     /about                      										controllers.Default.redirect(to = "/qui-sommes-nous")

GET     /mentions-legales													controllers.HomeController.content(request: Request, key = "content.legal")
GET     /legal                      										controllers.Default.redirect(to = "/mentions-legales")
GET     /hardCodedToLegal           										controllers.Default.redirect(to = "/mentions-legales")

GET		/questions-frequentes												controllers.HomeController.faq(request: Request)
GET		/faq																controllers.Default.redirect(to = "/questions-frequentes")

GET     /vie-prive															controllers.HomeController.content(request: Request, key = "content.privacy")
GET     /privacy                    										controllers.Default.redirect(to = "/vie-prive")



GET     /prise-en-charge-urgente-probleme-etancheite    					controllers.HomeController.content(request: Request, key = "content.water.repairing")
GET     /urgence-buee-sur-le-verre                      					controllers.Default.redirect(to = "/prise-en-charge-rapide-probleme-etancheite")

GET     /achat-de-montres-au-meilleur-prix    								controllers.HomeController.content(request: Request, key = "content.watch.purchasing")
GET     /courtier-en-montres-occasion         								controllers.Default.redirect(to = "/achat-de-montres-au-meilleur-prix")

GET     /vendez-votre-montre			    								controllers.HomeController.content(request: Request, key = "content.watch.selling")
GET     /mandat-de-depot-vente-virtuel-de-montre							controllers.Default.redirect(to = "/vendez-votre-montre")

GET     /estimation/montre/luxe		    									controllers.HomeController.content(request: Request, key = "content.watch.estimate")

GET		/lune																controllers.Default.redirect(to = "http://www.patek.com/contents/default/fr/MoonphaseIndicatorSetting.html")

GET		/chrono24															controllers.Default.redirect(to = "http://www.chrono24.fr/search/index.htm?dosearch=true&merchantName=watchnext")

GET		/links																controllers.Default.redirect(to = "https://legacy.hometime.fr/links")

GET		/avis-clients														controllers.HomeController.feedbacks(request: Request)

# Payment
GET	    /paiement/error               										controllers.PaymentProcessingController.displayErrorPage(request: Request)
POST    /paiement/error               										controllers.PaymentProcessingController.displayErrorPage(request: Request)
GET   	/paiement/success              										controllers.PaymentProcessingController.displaySuccessPage(request: Request)
POST    /paiement/backoffice           										controllers.PaymentProcessingController.manageBackOfficeAnswer(request: Request)
GET     /paiement/:ak               										controllers.PaymentProcessingController.preparePayment(request: Request, ak: String)

GET		/verification/certificat											controllers.FormProcessingController.checkAuthentication(request: Request, id1: Long, id2: Long, id3: Long)

#GET     /notify			     											controllers.Application.newIncomingCall(secret: String, phonenumber: String, missed: Boolean ?= false)

GET     /choisir/type/devis/entretien/montre/:brand							controllers.HomeController.chooseQuotation(request: Request, brand)

GET     /content/:page														controllers.HomeController.content(request: Request, page: String)

GET     /test																controllers.HomeController.test(request: Request)

POST	/abonnement															controllers.FormProcessingController.processRegister(request: Request)

# Appointment
GET	    /a/v/:uniqueKey               										controllers.FormProcessingController.validateAppointment(request: Request, uniqueKey: String)
GET	    /a/c/:uniqueKey               										controllers.FormProcessingController.cancelAppointment(request: Request, uniqueKey: String)


GET		/perma/offre														controllers.Default.redirect(to = "/les-services/l-offre")
GET		/perma/venir														controllers.Default.redirect(to = "/venir-nous-voir")
GET		/perma/visit														controllers.Default.redirect(to = "/venir-nous-voir")
GET		/perma/horlogers													controllers.Default.redirect(to = "/nos-horlogers")
GET		/perma/entretien													controllers.Default.redirect(to = "/entretien-reparation")
GET		/perma/rolex														controllers.Default.redirect(to = "/reparation/montre/rolex")
GET		/perma/omega														controllers.Default.redirect(to = "/reparation/montre/omega")
GET		/perma/devis														controllers.Default.redirect(to = "/demande-de-devis")
GET		/perma/auto/devis													controllers.Default.redirect(to = "/devis-interactif-immediat")
GET		/perma/authent														controllers.Default.redirect(to = "/authentification/certification/montre/paris")
GET		/perma/water														controllers.Default.redirect(to = "/prise-en-charge-urgente-probleme-etancheite")
GET		/perma/water/action													controllers.Default.redirect(to = "/demande-de-devis/urgence/etancheite")
GET		/perma/news															controllers.Default.redirect(to = "/actualites/news")
GET		/perma/legal														controllers.Default.redirect(to = "/mentions-legales")
GET		/perma/contact														controllers.Default.redirect(to = "/nous-contacter")
GET		/perma/when															controllers.Default.redirect(to = "/quand-faire-la-revision")
GET		/perma/buy															controllers.Default.redirect(to = "/rechercher-une-montre")
GET		/perma/buy/advices													controllers.Default.redirect(to = "/nous-contacter?title=J%27ai%20besoin%20de%20conseils%20pour%20acheter%20une%20montre")
GET		/perma/selling/advices												controllers.Default.redirect(to = "/nous-contacter?title=Je%20souhaite%20bénéficier%20d%27une%20prestation%20d%27expertise")
GET		/perma/selling/virtual												controllers.Default.redirect(to = "/nous-contacter?title=Je%20veux%20vendre%20ma%20montre%20par%20dépôt%20virtuel")
GET		/perma/selling/now													controllers.Default.redirect(to = "/nous-contacter?title=Je%20veux%20vous%20vendre%20ma%20montre")
GET		/perma/estimate														controllers.Default.redirect(to = "/nous-contacter?title=Je%20souhaite%20faire%20estimer%20ma%20collection")


GET     /sitemap.xml														controllers.HomeController.sitemap(request: Request)
GET     /plan-du-site														controllers.HomeController.siteplan(request: Request)

# Map specifically to robots.txt
GET     /robots.txt															controllers.Assets.at(path="/public", file="robots.txt")

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               										controllers.Assets.versioned(path="/public", file: Asset)

# Forward to legacy
GET     /admin               												controllers.RedirectController.redirect(request: Request, file="", startingUri: String="https://legacy.hometime.fr/admin/")
GET     /admin/               												controllers.RedirectController.redirect(request: Request, file="", startingUri: String="https://legacy.hometime.fr/admin/")
GET     /admin/*file               											controllers.RedirectController.redirect(request: Request, file: String, startingUri: String="https://legacy.hometime.fr/admin/")
GET     /private/*file               										controllers.RedirectController.redirect(request: Request, file: String, startingUri: String="https://legacy.hometime.fr/private/")
GET     /notify					     										controllers.RedirectController.redirect(request: Request, file="", startingUri: String="https://legacy.hometime.fr/notify")
GET     /login		    	              		    						controllers.RedirectController.redirect(request: Request, file="", startingUri: String="https://legacy.hometime.fr/login")
GET     /quick-login    		               								controllers.RedirectController.redirect(request: Request, file="", startingUri: String="https://legacy.hometime.fr/quick-login*params")
GET     /logout			                     								controllers.RedirectController.redirect(request: Request, file="", startingUri: String="https://legacy.hometime.fr/logout")

